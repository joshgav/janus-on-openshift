app:
  title: Janus on OpenShift (joshgav)
  baseUrl: https://backstage-${bs_app_name}.${openshift_ingress_domain}/

organization:
  name: joshgav @ Red Hat

backend:
  auth:
    keys:
    - secret: 'replacewithbase64secret'
  baseUrl: https://backstage-${bs_app_name}.${openshift_ingress_domain}/
  database:
    client: pg
    connection:
      # config options: https://node-postgres.com/apis/client
      host: backstage-pgcluster-rw
      port: 5432
      user: ${username}
      password: ${password}
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # https://node-postgres.com/features/ssl
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      ssl:
        ca: # if you have a CA file and want to verify it you can uncomment this section
          $file: /var/run/secrets/backstage-pgcluster-ca
  listen:
    port: 7007
  csp:
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
    connect-src:
      - "'self'"
      - 'http:'
      - 'https:'
    # Plugin: Jira
    img-src:
      # "'self'" and 'data' are from the backstage default but must be set since img-src is overwritten
      - "'self'"
      - 'data:'
      # Allow your Jira instance for @roadiehq/backstage-plugin-jira
      # - ${JIRA_URL}
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  cache:
    store: memory
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  github:
    - host: github.com
      ## if using a PAT:
      # token: ${GITHUB_TOKEN}
      ## if using GitHub apps:
      apps:
        - $include: github-app-credentials.yaml

proxy:
  endpoints:
    # Plugin: Quay
    '/quay/api':
      target: https://${registry_hostname}
      headers:
        X-Requested-With: 'XMLHttpRequest'
        Authorization: 'Bearer ${QUAY_TOKEN}'
      changeOrigin: true
      secure: true
      pathRewrite:
        '^/api/proxy/quay/api': '/'

techdocs:
  builder: 'local'
  generator:
    runIn: 'local'
  publisher:
    type: 'local'

auth:
  environment: development
  # see https://backstage.io/docs/auth/ to learn about auth providers
  providers:
    github:
      development:
        clientId: ${GITHUB_APP_CLIENT_ID}
        clientSecret: ${GITHUB_APP_CLIENT_SECRET}

scaffolder: {}

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
  - allow: [Component, System, Group, Resource, Location, Template, API]
  locations:
  - type: url
    target: https://github.com/joshgav/spring-apiserver/blob/main/backstage-catalog-info.yaml
  - type: url
    target: https://github.com/joshgav/bs1/blob/main/catalog-info.yaml
  ## Backstage templates
  - type: url
    target: https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/sample-templates/remote-templates.yaml
  ## Janus (Red Hat) templates
  - type: url
    target: https://github.com/janus-idp/backstage-showcase/blob/main/catalog-entities/all.yaml
  - type: url
    target: https://github.com/janus-idp/software-templates/blob/main/showcase-templates.yaml
  providers:
    ## for OCM plugin
    # ocm:
    #   env:
    #     kubernetesPluginRef: local-cluster
    ## scans orgs in GitHub and adds them to catalog
    github:
      ## TODO: this _must_ be named "providerId", which seems a bug
      providerId:
        organization: joshgav-org
        schedule:
          frequency:
            minutes: 30
          timeout:
            minutes: 3
    ## scans orgs in GitHub and adds users and groups to catalog
    githubOrg:
      default:
        orgUrl: https://github.com/joshgav-org
        schedule:
          frequency:
            minutes: 30
          timeout:
            minutes: 3

kubernetes:
  serviceLocatorMethod:
    type: multiTenant
  clusterLocatorMethods:
    - type: config
      clusters:
        - url: https://kubernetes.default.svc/
          name: local-cluster
          caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          authProvider: serviceAccount
          # don't specify this attribute to force lookup in pod in cluster
          # serviceAccountToken: ''
          dashboardUrl: https://console-openshift-console.${openshift_ingress_domain}/
          dashboardApp: openshift
          skipTLSVerify: false
          skipMetricsLookup: false
  customResources:
    - group: tekton.dev
      apiVersion: v1beta1
      plural: pipelineruns
    - group: tekton.dev
      apiVersion: v1beta1
      plural: taskruns
    - group: 'route.openshift.io'
      apiVersion: 'v1'
      plural: 'routes'

argocd:
  appLocatorMethods:
    - type: config
      instances:
        - name: argo
          url: https://openshift-gitops-server-openshift-gitops.${openshift_ingress_domain}/
          token: ${ARGOCD_AUTH_TOKEN}

quay:
  uiUrl: 'https://${registry_hostname}'